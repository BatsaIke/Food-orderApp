{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batsa\\\\Desktop\\\\React projects\\\\food order app\\\\src\\\\store\\\\Cart-provider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-contect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaltCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItem = state.item.map;\n    const updatedTotalAmount = state.totalAmount + action.val.price * action.val.amount;\n    return {\n      item: updatedItem,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaltCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaltCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"gDCUgOl8XgShXDI0fAgiS5bBAJU=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Batsa/Desktop/React projects/food order app/src/store/Cart-provider.js"],"names":["useReducer","CartContext","defaltCartState","items","totalAmount","cartReducer","state","action","type","updatedItem","item","map","updatedTotalAmount","val","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,eAAe,GAAE;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAWC,GAA/B;AACA,UAAMC,kBAAkB,GAAEN,KAAK,CAACF,WAAN,GAAmBG,MAAM,CAACM,GAAP,CAAWC,KAAX,GAAmBP,MAAM,CAACM,GAAP,CAAWE,MAA3E;AACA,WAAO;AAACL,MAAAA,IAAI,EAAED,WAAP;AACCL,MAAAA,WAAW,EAAEQ;AADd,KAAP;AAGH;;AACD,SAAOV,eAAP;AACH,CATD;;AAUA,MAAMc,YAAY,GAAEC,KAAK,IAAE;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAACK,WAAD,EAAaH,eAAb,CAAlD;;AAEJ,QAAMkB,oBAAoB,GAAEV,IAAI,IAAE;AAC9BS,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMW,yBAAyB,GAACC,EAAE,IAAE;AAC/BH,IAAAA,kBAAkB,CAAC;AAAEX,MAAAA,IAAI,EAAE,QAAR;AAAkBc,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACJ,GAFD;;AAII,QAAMC,WAAW,GAAG;AAClBpB,IAAAA,KAAK,EAAEe,SAAS,CAACf,KADC;AAElBC,IAAAA,WAAW,EAAEc,SAAS,CAACd,WAFL;AAGlBoB,IAAAA,OAAO,EAAEJ,oBAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACFN,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAvBD;;GAAMV,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./Cart-contect\";\r\n\r\nconst defaltCartState ={\r\n    items:[],\r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer =(state, action)=>{\r\n    if(action.type===\"ADD\"){\r\n        const updatedItem = state.item.map\r\n        const updatedTotalAmount =state.totalAmount+ action.val.price * action.val.amount\r\n        return {item: updatedItem,\r\n                totalAmount: updatedTotalAmount\r\n            }\r\n    }\r\n    return defaltCartState;\r\n}\r\nconst CartProvider =props=>{\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer,defaltCartState)\r\n\r\nconst addItemToCartHandler= item=>{\r\n    dispatchCartAction({type: \"ADD\", item: item})\r\n}\r\n\r\nconst removeItemFromCartHandler=id=>{\r\n     dispatchCartAction({ type: \"REMOVE\", id: id });\r\n}\r\n\r\n    const cartContext = {\r\n      items: cartState.items,\r\n      totalAmount: cartState.totalAmount,\r\n      addItem: addItemToCartHandler,\r\n      removeItem: removeItemFromCartHandler\r\n    };\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n\r\n\r\n}\r\n\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}