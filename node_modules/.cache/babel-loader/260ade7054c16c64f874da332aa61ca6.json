{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batsa\\\\Desktop\\\\React projects\\\\FoodorderContinue\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { useState } from 'react/cjs/react.development';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isNotFive = value => value.trim().length < 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setformInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postal: true\n  });\n  const nameinputRef = useRef();\n  const streetInput = useRef();\n  const postalinputRef = useRef();\n  const cityinputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameinputRef.current.value;\n    const streeName = streetInput.current.value;\n    const postalname = postalinputRef.current.value;\n    const cityName = cityinputRef.current.value;\n    const enteredNameIsvalid = !isEmpty(enteredName);\n    const enteredSteetIsvalid = !isEmpty(streeName);\n    const enteredCityIsvalid = !isEmpty(cityName);\n    const enteredpostalCodeisvalid = !isNotFive(postalname);\n    setformInputValidity({\n      name: enteredNameIsvalid,\n      street: enteredSteetIsvalid,\n      city: enteredCityIsvalid,\n      postal: enteredpostalCodeisvalid\n    });\n    const formIsvalid = enteredNameIsvalid && enteredSteetIsvalid && enteredCityIsvalid && enteredpostalCodeisvalid;\n\n    if (!formIsvalid) {\n      return;\n    }\n\n    props.onConFirm({\n      name: enteredName,\n      city: cityName,\n      street: streeName,\n      postal: postalname\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputValidity.street ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputValidity.city ? \"\" : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formInputValidity.postal ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameinputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid street name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalinputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), !formInputValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid city name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityinputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid postal name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"Gf7jk6jh+Lk56v6tMC9H3Qb6QHw=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Batsa/Desktop/React projects/FoodorderContinue/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isNotFive","length","Checkout","props","formInputValidity","setformInputValidity","name","street","city","postal","nameinputRef","streetInput","postalinputRef","cityinputRef","confirmHandler","event","preventDefault","enteredName","current","streeName","postalname","cityName","enteredNameIsvalid","enteredSteetIsvalid","enteredCityIsvalid","enteredpostalCodeisvalid","formIsvalid","onConFirm","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport classes from './Checkout.module.css'\r\n\r\nconst isEmpty =value=> value.trim()===\"\";\r\nconst isNotFive =value => value.trim().length <5\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setformInputValidity]=useState({\r\n    name: true,\r\n    street: true,\r\n    city:true,\r\n    postal: true\r\n  })\r\nconst nameinputRef =useRef();\r\nconst streetInput = useRef();\r\nconst postalinputRef = useRef();\r\nconst cityinputRef = useRef();\r\n\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameinputRef.current.value;\r\n    const streeName = streetInput.current.value;\r\n    const postalname = postalinputRef.current.value;\r\n    const cityName = cityinputRef.current.value;\r\n\r\n    const enteredNameIsvalid = !isEmpty(enteredName);\r\n    const enteredSteetIsvalid = !isEmpty(streeName);\r\n    const enteredCityIsvalid = !isEmpty(cityName);\r\n    const enteredpostalCodeisvalid= !isNotFive(postalname)\r\n\r\n    setformInputValidity({\r\n      name: enteredNameIsvalid,\r\n      street:enteredSteetIsvalid,\r\n      city: enteredCityIsvalid,\r\n      postal: enteredpostalCodeisvalid\r\n    })\r\n\r\n    const formIsvalid = enteredNameIsvalid&& enteredSteetIsvalid\r\n    &&enteredCityIsvalid &&enteredpostalCodeisvalid\r\n\r\n\r\n\r\n    if (!formIsvalid){\r\n      return\r\n    }\r\n    props.onConFirm({\r\n      name: enteredName,\r\n      city: cityName,\r\n      street: streeName,\r\n      postal: postalname,\r\n    });\r\n  };\r\n\r\n  const nameControlClasses =`${classes.control} ${formInputValidity.name?\"\": classes.invalid}`\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputValidity.street ? \"\" : classes.invalid}`;\r\n      const cityControlClasses = `${classes.control} ${\r\n        formInputValidity.city ? \"\" : classes.invalid\r\n      }`;\r\n\r\n        const postalControlClasses = `${classes.control} ${\r\n          formInputValidity.postal ? \"\" : classes.invalid\r\n        }`;\r\n\r\n\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameinputRef} />\r\n        {!formInputValidity.name && <p>Enter a valid name</p>}\r\n      </div>\r\n\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInput} />\r\n        {!formInputValidity.street && <p>Enter a valid street name</p>}\r\n      </div>\r\n\r\n      <div className={postalControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalinputRef} />\r\n        {!formInputValidity.postal && <p>Enter a valid city name</p>}\r\n      </div>\r\n\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityinputRef} />\r\n        {!formInputValidity.city && <p>Enter a valid postal name</p>}\r\n      </div>\r\n\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}