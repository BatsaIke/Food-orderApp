{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batsa\\\\Desktop\\\\React projects\\\\food order app\\\\src\\\\store\\\\Cart-provider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-contect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaltCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id == action.item.id);\n    const existingCartItems = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (existingCartItems) {\n      const updatedItem = { ...existingCartItems,\n        amount: existingCartItems.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItem,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaltCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaltCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"gDCUgOl8XgShXDI0fAgiS5bBAJU=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Batsa/Desktop/React projects/food order app/src/store/Cart-provider.js"],"names":["useReducer","CartContext","defaltCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItems","updatedItem","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,eAAe,GAAE;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAChC,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACvB,UAAMC,kBAAkB,GAAEH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA9E;AAEA,UAAMC,qBAAqB,GAAEP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAEA,IAAI,CAACK,EAAL,IAASR,MAAM,CAACG,IAAP,CAAYK,EAAjD,CAA7B;AAEI,UAAMC,iBAAiB,GAAEV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AACA,QAAII,WAAJ;AACA,QAAIC,YAAJ;;AACA,QAAIF,iBAAJ,EAAsB;AACtB,YAASC,WAAW,GAAC,EACb,GAAGD,iBADU;AAEbJ,QAAAA,MAAM,EAACI,iBAAiB,CAACJ,MAAlB,GAA2BL,MAAM,CAACG,IAAP,CAAYE;AAFjC,OAArB;AAIIM,MAAAA,YAAY,GAAC,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAb;AACAe,MAAAA,YAAY,CAACL,qBAAD,CAAZ,GAAqCI,WAArC;AACH,KAPD,MAOK;AAEDC,MAAAA,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;AACH;;AAED,WAAO;AACHP,MAAAA,KAAK,EAAEc,WADJ;AAEHb,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAGH;;AACD,SAAOP,eAAP;AACH,CA1BD;;AA4BA,MAAMkB,YAAY,GAAEC,KAAK,IAAE;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAaH,eAAb,CAAlD;;AAEJ,QAAMsB,oBAAoB,GAAEd,IAAI,IAAE;AAC9Ba,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMe,yBAAyB,GAACV,EAAE,IAAE;AAC/BQ,IAAAA,kBAAkB,CAAC;AAAEf,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACJ,GAFD;;AAII,QAAMW,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADC;AAElBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAvBD;;GAAMT,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./Cart-contect\";\r\n\r\nconst defaltCartState ={\r\n    items:[],\r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer =(state, action)=>{\r\n    if(action.type===\"ADD\"){\r\n    const updatedTotalAmount =state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex= state.items.findIndex(item=>item.id==action.item.id\r\n        );\r\n        const existingCartItems= state.items[existingCartItemIndex]\r\n        let updatedItem;\r\n        let updatedItems;\r\n        if (existingCartItems){\r\n        const    updatedItem={\r\n                ...existingCartItems,\r\n                amount:existingCartItems.amount + action.item.amount\r\n            }\r\n            updatedItems=[...state.items]\r\n            updatedItems[existingCartItemIndex]= updatedItem\r\n        }else{\r\n           \r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n   \r\n        return {\r\n            items: updatedItem,\r\n            totalAmount: updatedTotalAmount}\r\n    }\r\n    return defaltCartState;\r\n}\r\n\r\nconst CartProvider =props=>{\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer,defaltCartState)\r\n\r\nconst addItemToCartHandler= item=>{\r\n    dispatchCartAction({type: \"ADD\", item: item})\r\n}\r\n\r\nconst removeItemFromCartHandler=id=>{\r\n     dispatchCartAction({ type: \"REMOVE\", id: id });\r\n}\r\n\r\n    const cartContext = {\r\n      items: cartState.items,\r\n      totalAmount: cartState.totalAmount,\r\n      addItem: addItemToCartHandler,\r\n      removeItem: removeItemFromCartHandler\r\n    };\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n\r\n\r\n}\r\n\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}