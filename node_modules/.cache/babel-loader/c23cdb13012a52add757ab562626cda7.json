{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batsa\\\\Desktop\\\\React projects\\\\FoodorderContinue\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isloading, setisloading] = useState(true);\n  const [httperror, setError] = useState();\n  useEffect(() => {\n    const fethMeals = async () => {\n      const response = await fetch(\"https://reactpost-c3b32-default-rtdb.firebaseio.com/.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setisloading(false);\n    };\n\n    fethMeals().catch(error => {\n      setisloading(false);\n      setError(error.message);\n    });\n  }, []);\n\n  if (isloading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.meals,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httperror) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.meals,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\",\n            color: \"red\"\n          },\n          children: httperror\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"ZbvShVLsN7+W/Z9eduCBUY2NDg8=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/Batsa/Desktop/React projects/FoodorderContinue/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isloading","setisloading","httperror","setError","fethMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","textAlign","color","mealsList","map","meal"],"mappings":"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","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n\n\nconst AvailableMeals = () => {\n  const [meals, setMeals]= useState([])\n  const [isloading, setisloading]=useState(true)\n  const [httperror, setError] =useState()\n\n  useEffect(()=>{\n    const fethMeals = async()=>{\n const response=  await fetch(\"https://reactpost-c3b32-default-rtdb.firebaseio.com/.json\")\n   \n \n    if (!response.ok) {\n      throw new Error(\"Something went wrong\");\n    }\n const responseData = await response.json()\n\n\n    const loadedMeals=[];\n\n    for(const key in responseData){\n      loadedMeals.push({\n        id: key,\n        name: responseData[key].name,\n        description: responseData[key].description,\n        price: responseData[key].price,\n      })\n\n    }\n    setMeals(loadedMeals)\n    setisloading(false)\n}\n\n  fethMeals().catch(error=>{\n    setisloading(false)\n  setError(error.message)\n  })\n\n  \n\n  },[])\n  \n  if(isloading){\n    return (\n      <section className={classes.meals}>\n        <Card>\n          <p style={{textAlign:\"center\"}}>loading</p>\n        </Card>\n      </section>\n    );\n  }\n\n  if(httperror){\n    return (\n      <section className={classes.meals}>\n        <Card>\n          <p style={{ textAlign: \"center\", color: \"red\" }}>{httperror}</p>\n        </Card>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n  \n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}