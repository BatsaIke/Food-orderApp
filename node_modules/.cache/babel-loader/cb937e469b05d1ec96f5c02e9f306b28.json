{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batsa\\\\Desktop\\\\React projects\\\\FoodorderContinue\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { useState } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setisCheckout] = useState(false);\n  const [isubMitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setisCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch(\"https://reactpost-c3b32-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"post\",\n      body: JSON.stringify({\n        userData: userData,\n        ordeeredItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  const cartModalcontent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConFirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !isCheckout && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button--alt\"],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const isSubmittingcontent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 28\n  }, this);\n\n  const didSubmitModalcontedt = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Succesfully sent\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 30\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isubMitting && !didSubmit && cartModalcontent, isubMitting && isSubmittingcontent, !isubMitting && didSubmit && didSubmitModalcontedt]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"8nqcON+z7ENYxbINmwCgMjEzmcc=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Batsa/Desktop/React projects/FoodorderContinue/src/components/Cart/Cart.js"],"names":["useContext","Modal","CartItem","classes","CartContext","Checkout","useState","Cart","props","cartCtx","isCheckout","setisCheckout","isubMitting","setIsSubmitting","didSubmit","setDidSubmit","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","ordeeredItems","cartItems","map","name","amount","price","bind","cartModalcontent","total","onClose","actions","button","isSubmittingcontent","didSubmitModalcontedt"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\n\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { useState } from 'react/cjs/react.development';\n\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setisCheckout]=useState(false)\n  const [isubMitting, setIsSubmitting]=useState(false)\n  const[didSubmit, setDidSubmit] = useState(false);\n\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler=()=>{\n    setisCheckout(true)\n  }\n\n  const submitOrderHandler=async(userData)=>{\n    setIsSubmitting(true)\n   await fetch(\"https://reactpost-c3b32-default-rtdb.firebaseio.com/orders.json\",{\n       method: \"post\",\n       body: JSON.stringify({\n         userData: userData,\n         ordeeredItems: cartCtx.items\n       })\n     });\n     setIsSubmitting(false)\n     setDidSubmit(true)\n\n  }\n\n  const cartItems = (\n    <ul className={classes['cart-items']}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\nconst cartModalcontent = (\n  <>\n  \n    {cartItems}\n    <div className={classes.total}>\n      <span>Total Amount</span>\n      <span>{totalAmount}</span>\n    </div>\n    {isCheckout && (\n      <Checkout onConFirm={submitOrderHandler} onCancel={props.onClose} />\n    )}\n    {!isCheckout && (\n      <div className={classes.actions}>\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n        {hasItems && (\n          <button className={classes.button} onClick={orderHandler}>\n            Order\n          </button>\n        )}\n      </div>\n    )}\n  </>\n);\n  \nconst isSubmittingcontent =<p>sending order data...</p>\nconst didSubmitModalcontedt= <p>Succesfully sent</p>\n  return (\n    <Modal onClose={props.onClose}>\n     {!isubMitting && !didSubmit  && cartModalcontent}\n     {isubMitting  && isSubmittingcontent}\n     {!isubMitting&& didSubmit && didSubmitModalcontedt}\n\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}