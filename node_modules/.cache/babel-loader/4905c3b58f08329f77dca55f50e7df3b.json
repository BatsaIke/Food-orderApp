{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Batsa\\\\Desktop\\\\React projects\\\\FoodorderContinue\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { useState } from 'react/cjs/react.development';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isNotFive = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setformInputValidity] = useState({\n    name,\n    street\n  });\n  const nameinputRef = useRef();\n  const streetInput = useRef();\n  const postalinputRef = useRef();\n  const cityinputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameinputRef.current.value;\n    const streeName = streetInput.current.value;\n    const postalname = postalinputRef.current.value;\n    const cityName = cityinputRef.current.value;\n    const enteredNameIsvalid = !isEmpty(enteredName);\n    const enteredSteetIsvalid = !isEmpty(streeName);\n    const enteredCityIsvalid = !isEmpty(cityName);\n    const enteredpostalCodeisvalid = !isNotFive(postalname);\n    const formIsvalid = enteredNameIsvalid && enteredSteetIsvalid && enteredCityIsvalid && enteredpostalCodeisvalid;\n\n    if (!formIsvalid) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameinputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalinputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityinputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"nrUzSCfe4Hcu3e3I5pyi4vE+kWM=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Batsa/Desktop/React projects/FoodorderContinue/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isNotFive","length","Checkout","props","formInputValidity","setformInputValidity","name","street","nameinputRef","streetInput","postalinputRef","cityinputRef","confirmHandler","event","preventDefault","enteredName","current","streeName","postalname","cityName","enteredNameIsvalid","enteredSteetIsvalid","enteredCityIsvalid","enteredpostalCodeisvalid","formIsvalid","form","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport classes from './Checkout.module.css'\r\n\r\nconst isEmpty =value=> value.trim()===\"\";\r\nconst isNotFive =value => value.trim().length !==5\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setformInputValidity]=useState({\r\n    name,\r\n    street,\r\n  })\r\nconst nameinputRef =useRef();\r\nconst streetInput = useRef();\r\nconst postalinputRef = useRef();\r\nconst cityinputRef = useRef();\r\n\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameinputRef.current.value;\r\n    const streeName = streetInput.current.value;\r\n    const postalname = postalinputRef.current.value;\r\n    const cityName = cityinputRef.current.value;\r\n\r\n    const enteredNameIsvalid = !isEmpty(enteredName);\r\n    const enteredSteetIsvalid = !isEmpty(streeName);\r\n    const enteredCityIsvalid = !isEmpty(cityName);\r\n    const enteredpostalCodeisvalid= !isNotFive(postalname)\r\n\r\n    const formIsvalid = enteredNameIsvalid&& enteredSteetIsvalid\r\n    &&enteredCityIsvalid &&enteredpostalCodeisvalid\r\n\r\n\r\n\r\n    if (!formIsvalid){\r\n      return\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" \r\n        ref={nameinputRef}/>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" \r\n        ref={streetInput} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\"\r\n        ref={postalinputRef}  />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" \r\n        ref={cityinputRef} />\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}